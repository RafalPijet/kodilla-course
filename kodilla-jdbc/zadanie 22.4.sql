CREATE TABLE BOOKS_AUD (
	EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,
    BOOK_ID INT(11) NOT NULL,
    NEW_TITLE VARCHAR(255),
    OLD_TITLE VARCHAR(255),
    NEW_PUBYEAR INT(4),
    OLD_PUBYEAR INT(4),
    NEW_BESTSELLER BOOLEAN,
    OLD_BESTSELLER BOOLEAN,
    PRIMARY KEY (EVENT_ID)
);
#next
DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
    VALUES (CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;
#next
INSERT INTO BOOKS (TITLE, PUBYEAR, BESTSELLER)
VALUES ('Neverending Story', 1973, 1);
INSERT INTO BOOKS (TITLE, PUBYEAR, BESTSELLER)
VALUES ('System Shock', 1999, 0);
commit;
#next
DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
    VALUES (CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

DELIMITER ;
#next
DELETE FROM BOOKS WHERE BOOK_ID = 7;
COMMIT;
#next
DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, OLD_TITLE, NEW_PUBYEAR, OLD_PUBYEAR, NEW_BESTSELLER, OLD_BESTSELLER)
    VALUES (CURTIME(), 'UPDATE', NEW.BOOK_ID, NEW.TITLE, OLD.TITLE, NEW.PUBYEAR, OLD.PUBYEAR, NEW.BESTSELLER, OLD.BESTSELLER);
END $$

DELIMITER ;
#next
UPDATE BOOKS SET BESTSELLER = 0 WHERE BOOK_ID = 6;
COMMIT;
#next
CREATE TABLE READERS_AUD (
	EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,
    READER_ID INT(11) NOT NULL,
    NEW_FIRSTNAME VARCHAR(255),
    OLD_FIRSTNAME VARCHAR(255),
    NEW_LASTNAME VARCHAR(255),
    OLD_LASTNAME VARCHAR(255),
    NEW_PESEL BIGINT(11),
    OLD_PESEL BIGINT(11),
    NEW_VIP_LEVEL VARCHAR(20),
    OLD_VIP_LEVEL VARCHAR(20),
    PRIMARY KEY (EVENT_ID)
);
#next
DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESEL, NEW_VIP_LEVEL)
    VALUES (CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESEL_ID, NEW.VIP_LEVEL);
END $$

DELIMITER ;
#next
INSERT INTO READERS (FIRSTNAME, LASTNAME, PESEL_ID, VIP_LEVEL)
VALUES ('David', 'Gahan', '52031267854', 'Gold customer');
INSERT INTO READERS (FIRSTNAME, LASTNAME, PESEL_ID, VIP_LEVEL)
VALUES ('Martin', 'L.Gore', '63072269313', 'Gold customer');
commit;
#next
DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
    VALUES (CURTIME(), 'DELETE', OLD.READER_ID);
END $$

DELIMITER ;
#next
DELETE FROM READERS WHERE READER_ID = 7;
COMMIT;
#next
DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, OLD_FIRSTNAME, NEW_LASTNAME, OLD_LASTNAME, NEW_PESEL, OLD_PESEL, NEW_VIP_LEVEL, OLD_VIP_LEVEL)
    VALUES (CURTIME(), 'UPDATE', OLD.READER_ID, NEW.FIRSTNAME, OLD.FIRSTNAME, NEW.LASTNAME, OLD.LASTNAME, NEW.PESEL_ID, OLD.PESEL_ID, NEW.VIP_LEVEL, OLD.VIP_LEVEL);
END $$

DELIMITER ;
#next
UPDATE READERS SET PESEL_ID = 62031267854
WHERE READER_ID = 6;
COMMIT;
